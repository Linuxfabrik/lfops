- name: 'The Linuxfabrik basic setup.'
  hosts:
    - 'lfops_basic_setup'


  pre_tasks:

    # currently, this is thought for centos7, rocky8 and fedora35. therefore, if there is no when-staement, it should work against those.
    # please extend and improve as required.
    - name: 'Check if the OS is supported'
      ansible.builtin.meta: 'end_host'
      when:
        - 'ansible_facts["os_family"] != "RedHat"'
      tags:
        - 'always'


  roles:

    # === Basic repositories ===
    - role: 'linuxfabrik.lfops.repo_baseos'
      when:
        - '(ansible_facts["distribution"] == "CentOS" and ansible_facts["distribution_major_version"] in ["7", "8"])
          or (ansible_facts["distribution"] == "Rocky" and ansible_facts["distribution_major_version"] in ["8"])'

    - role: 'linuxfabrik.lfops.repo_epel'
      when:
        - 'ansible_facts["os_family"] == "RedHat" and ansible_facts["distribution_major_version"] in ["7", "8"]'


    # === Mailing ===
    - role: 'linuxfabrik.lfops.mailx'

    - role: 'linuxfabrik.lfops.postfix'

    - role: 'linuxfabrik.lfops.mailto_root'


    # === Various tools / dependencies ===

    - role: 'linuxfabrik.lfops.python'
      when:
        - 'not basic_setup__skip_python | d(false)'

    - role: 'linuxfabrik.lfops.glances'

    - role: 'linuxfabrik.lfops.tools'

    - role: 'linuxfabrik.lfops.at'

    - role: 'linuxfabrik.lfops.yum_utils'

    - role: 'linuxfabrik.lfops.libselinux_python'
      when:
        - 'ansible_facts["os_family"] == "RedHat"'


    # === Sensible defaults ===
    - role: 'linuxfabrik.lfops.timezone'

    - role: 'linuxfabrik.lfops.logrotate'

    - role: 'linuxfabrik.lfops.cockpit'

    - role: 'linuxfabrik.lfops.dnf_makecache'
      when:
        - '(ansible_facts["os_family"] == "RedHat" and ansible_facts["distribution_major_version"] in ["8"])
          or (ansible_facts["distribution"] == "Fedora")'

    - role: 'linuxfabrik.lfops.kdump'
      # not running against fedora, because fedora has no kdump by default
      when:
        - 'ansible_facts["distribution"] != "Fedora"'

    - role: 'linuxfabrik.lfops.network'
      # not running against fedora, as fedora requires NetworkManager
      when:
        - 'ansible_facts["os_family"] == "RedHat" and ansible_facts["distribution_major_version"] in ["7", "8"]'


    # === SSH ===
    # TODO: does this work with CIS?
    - role: 'linuxfabrik.lfops.sshd'
      when:
        - 'ansible_facts["os_family"] == "RedHat" and ansible_facts["distribution_major_version"] in ["7", "8"]'

    - role: 'linuxfabrik.lfops.login'
      when:
        - 'not basic_setup__skip_login | d(false)'


    # === Firewalling ===
    - role: 'linuxfabrik.lfops.firewall'
      when:
        - 'not basic_setup__skip_firewall | d(false)'


    # === Automatic updates ===
    # - role: 'linuxfabrik.lfops.system_update' TODO
    #   when:
    #     - not basic_setup__skip_system_update | d(false)


    # === Backups ===
    - role: 'linuxfabrik.lfops.duplicity'
      when:
        - 'not basic_setup__skip_duplicity | d(false)'


    # === Monitoring ===
    - role: 'linuxfabrik.lfops.monitoring_plugins'
      when:
        - 'not basic_setup__skip_monitoring_plugins | d(false)'

    - role: 'linuxfabrik.lfops.repo_icinga'
      when:
        - 'not basic_setup__skip_repo_icinga | d(false)'

    # - role: 'linuxfabrik.lfops.icinga2-agent' TODO
    #   when:
    #     - 'not basic_setup__skip_icinga2_agent | d(false)'

    # - role: 'linuxfabrik.lfops.icinga2-log-level' TODO
    #   when:
    #     - 'not basic_setup__skip_icinga2_log_level | d(false)'


    # === Security ===
    # - role: 'linuxfabrik.lfops.freeipa-client' TODO
    #   when:
    #     - 'not basic_setup__skip_freeipa_client | d(true)'

    # - role: 'linuxfabrik.lfops.audit' TODO
    #   when:
    #     - 'not basic_setup__skip_audit | d(true)'

    # lower the FUTURE policy to FUTURE:LINUXFABRIK first, otherwise linuxfabrik.lfops.repo_epel and other things won't work
    # - role: 'linuxfabrik.lfops.crypto-policy' TODO
    #   when:
    #     - 'not basic_setup__skip_crypto_policy | d(true)'
