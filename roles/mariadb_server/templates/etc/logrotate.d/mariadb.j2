# {{ ansible_managed }}
# 2025050901

# This is the MariaDB configuration for the logrotate utility
#
# Note that on most Linux systems logs are written to journald, which has its
# own rotation scheme.
#
# Read https://mariadb.com/kb/en/error-log/ to learn more about logging and
# https://mariadb.com/kb/en/rotating-logs-on-unix-and-linux/ about rotating logs.

/var/lib/mysql/mysqld.log /var/lib/mysql/mariadb.log /var/log/mariadb/*.log {

  # Using the MariaDB admin user with appropriate privileges for log rotation
  su mysql mysql

  # If any of the files listed above is missing, skip them silently without
  # emitting any errors
  missingok

  # If file exists but is empty, don't rotate it (deactivated by Linuxfabrik)
  #notifempty

  # Run monthly (deactivated by Linuxfabrik)
  #monthly

  # Linuxfabrik
  copytruncate
  daily
  dateext
  rotate {{ mariadb_server__logrotate | d(logrotate__rotate) | d(14) }}

  # If file is growing too big, rotate immediately (deactivated by Linuxfabrik)
  #maxsize 500M

  # If file size is too small, don't rotate at all (deactivated by Linuxfabrik)
  #minsize 50M

  # Compress logs, as they are text and compression will save a lot of disk space (deactivated by Linuxfabrik)
  #compress

  # Don't compress the log immediately to avoid errors about "file size changed while zipping" (deactivated by Linuxfabrik)
  #delaycompress

  # Don't run the postrotate script for each file configured in this file, but
  # run it only once if one or more files were rotated
  sharedscripts

  # After each rotation, run this custom script to flush the logs
  postrotate
    if test -r /etc/mysql/debian.cnf
    then
      EXTRAPARAM='--defaults-file=/etc/mysql/debian.cnf'
    fi

    if test -x /usr/bin/mariadb-admin
    then
{% if (mariadb_server__admin_user['plugin'] | default('')) == 'unix_socket' %}
      # For unix_socket authentication, we need to run as the admin user
      /bin/sudo --user {{ mariadb_server__admin_user['username'] | quote }} /usr/bin/mariadb-admin \
        --user={{ mariadb_server__admin_user['username'] | quote }} \
        $EXTRAPARAM \
        --local flush-error-log flush-engine-log flush-general-log flush-slow-log
{% else %}
      # For password authentication, we need to provide the password
      /usr/bin/mariadb-admin \
        --user={{ mariadb_server__admin_user['username'] | quote }} \
        --password={{ mariadb_server__admin_user['password'] | quote }} \
        $EXTRAPARAM \
        --local flush-error-log flush-engine-log flush-general-log flush-slow-log
{% endif %}
    fi
  endscript
}
