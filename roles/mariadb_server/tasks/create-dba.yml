- block:

  - name: 'Create DBA "{{ mariadb_server__admin_user["username"] }}"'
    community.mysql.mysql_user:
      check_implicit_admin: true
      login_user: '{{ mariadb_server__admin_user["username"] }}'
      login_password: '{{ mariadb_server__admin_user["password"] }}'
      login_unix_socket: '{{ mariadb_server__cnf_socket__combined_var }}' # required instead of localhost
      name: '{{ mariadb_server__admin_user["username"] }}'
      password: '{{ mariadb_server__admin_user["password"] if (mariadb_server__admin_user["plugin"] | default("")) != "unix_socket" else omit }}'
      host: '{{ item }}'
      priv: '*.*:ALL,GRANT'
      plugin: '{{ mariadb_server__admin_user["plugin"] | default(omit) }}'
      state: 'present'

  rescue:

  - name: 'Fail the rescue without old_password'
    ansible.builtin.fail:
      msg: 'DBA user creation failed and `old_password` is not set. Have a look at the error message of the previous task.'
    when: 'mariadb_server__admin_user["old_password"] is not defined or not mariadb_server__admin_user["old_password"] | length'

  - name: 'Create DBA "{{ mariadb_server__admin_user["username"] }}" (with old_password)'
    community.mysql.mysql_user:
      check_implicit_admin: true
      login_user: '{{ mariadb_server__admin_user["username"] }}'
      login_password: '{{ mariadb_server__admin_user["old_password"] }}'
      login_unix_socket: '{{ mariadb_server__cnf_socket__combined_var }}' # required instead of localhost
      name: '{{ mariadb_server__admin_user["username"] }}'
      password: '{{ mariadb_server__admin_user["password"] if (mariadb_server__admin_user["plugin"] | default("")) != "unix_socket" else omit }}'
      host: '{{ item }}'
      priv: '*.*:ALL,GRANT'
      plugin: '{{ mariadb_server__admin_user["plugin"] | default(omit) }}'
      state: 'present'
    when: 'mariadb_server__admin_user["old_password"] is defined and mariadb_server__admin_user["old_password"] | length'

  # become the admin linux user if the plugin is unix_socket
  become: '{{ (mariadb_server__admin_user["plugin"] | default("")) == "unix_socket" }}'
  become_user: '{{ mariadb_server__admin_user["username"] if (mariadb_server__admin_user["plugin"] | default("")) == "unix_socket" else omit }}'