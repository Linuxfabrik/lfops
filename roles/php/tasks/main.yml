- block:

  - name: 'Install php php-fpm composer'
    ansible.builtin.package:
      name:
        - 'php'
        - 'php-fpm'
        - 'composer'
      state: 'present'

  tags:
    - 'php'


- block:

  - name: 'Combined Modules:'
    ansible.builtin.debug:
      var: 'php__modules__combined_var'

  - name: 'Ensure PHP modules are absent'
    # providing the packages as a list is much more faster than looping for each
    ansible.builtin.package:
      name: '{{ php__modules__combined_var | selectattr("state", "defined") | selectattr("state", "eq", "absent") | map(attribute="name") }}'
      state: 'absent'

  - name: 'Ensure PHP modules are present'
    # providing the packages as a list is much more faster than looping for each
    ansible.builtin.package:
      name: '{{ (php__modules__combined_var | selectattr("state", "defined") | selectattr("state", "ne", "absent") | map(attribute="name"))
          + (php__modules__combined_var | selectattr("state", "undefined") | map(attribute="name")) }}'
      state: 'present'

  tags:
    - 'php:modules'
    - 'php'


- block:

  - name: 'Get the list of installed packages'
    ansible.builtin.package_facts:  # yamllint disable-line rule:empty-values
    check_mode: false # run task even if `--check` is specified

  - name: 'Get PHP version'
    ansible.builtin.set_fact:
      php__installed_version: '{{ ansible_facts["packages"]["php"][0]["version"] | regex_replace("\.\d+$", "") }}'

  - name: 'Load default values for {{ php__installed_version }}'
    ansible.builtin.include_vars: 'defaults/{{ php__installed_version }}.yml'

  - name: 'Deploy the /etc/php.d/z00-linuxfabrik.ini'
    ansible.builtin.template:
      src: 'etc/php.d/{{ php__installed_version }}-z00-linuxfabrik.ini.j2'
      dest: '/etc/php.d/z00-linuxfabrik.ini'
      owner: 'root'
      group: 'root'
      mode: 0o644
    notify: 'php: restart php-fpm'

  tags:
    - 'php:ini'
    - 'php'


- block:

  - name: 'Remove absent pools from /etc/php-fpm.d'
    ansible.builtin.file:
      path: '/etc/php-fpm.d/{{ item["name"] }}.conf'
      state: 'absent'
    when:
      - 'item["state"] | d("present") == "absent"'
    loop: '{{ php__fpm_pools__combined_var }}'
    notify: 'php: restart php-fpm'

  - name: 'Deploy the pools to /etc/php-fpm.d/'
    ansible.builtin.template:
      src: 'etc/php-fpm.d/pool.conf.j2'
      dest: '/etc/php-fpm.d/{{ item["name"] }}.conf'
      owner: 'root'
      group: 'root'
      mode: 0o644
    when:
      - 'item["state"] | d("present") != "absent"'
    loop: '{{ php__fpm_pools__combined_var }}'
    notify: 'php: restart php-fpm'

  tags:
    - 'php:fpm'
    - 'php'


- block:

  - name: 'systemctl {{ php__fpm_service_enabled | bool | ternary("enable", "disable") }} --now php-fpm'
    ansible.builtin.service:
      name: 'php-fpm'
      enabled: '{{ php__fpm_service_enabled }}'
      state: '{{ php__fpm_service_enabled | bool | ternary("started", "stopped") }}'

  tags:
    - 'php:state'
    - 'php'
