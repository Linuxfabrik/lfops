- block:

  - name: 'Create the list of available check plugins'
    ansible.builtin.find:
      paths: '/tmp/ansible.monitoring-plugins-repo/check-plugins/'
      # patterns: '/tmp/ansible\.monitoring-plugins-repo/check-plugins/(?P<check>.*)/(?P=check)2' # this does not work, as it only tries matching against the basename
      # use_regex: yes
      recurse: true
      depth: 2
      hidden: true
    register: 'find_result'
    run_once: true

  - name: 'Set filter'
    ansible.builtin.set_fact:
      monitoring_plugins__check_plugin_search_name: "{{
          (ansible_facts['os_family'] == 'Windows') | bool | ternary(
            '.windows',
            '(?P=check)' ~ monitoring_plugins__python_version
          )
        }}"

  - name: 'Apply filters'
    ansible.builtin.set_fact:
      monitoring_plugins__plugin_list: "{{
          find_result.files
          | map(attribute='path')
          | map('regex_search', '/tmp/ansible\\.monitoring-plugins-repo/check-plugins/(?P<check>.*)/' ~ monitoring_plugins__check_plugin_search_name)
          | map('regex_replace', '/tmp/ansible\\.monitoring-plugins-repo/check-plugins/(?P<check>.*)/' ~ monitoring_plugins__check_plugin_search_name, '\\g<check>')
          | reject('search', 'example')
          | reject('search', 'None')
          | select('string') | list | unique
        }}"
    when: 'monitoring_plugins__plugin_list is not defined'

  delegate_to: 'localhost'
  check_mode: false # run task even if `--check` is specified
