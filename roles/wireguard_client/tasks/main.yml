- block:

  - name: 'Installing elrepo-release'
    ansible.builtin.package:
      name:
        - 'elrepo-release'
      state: 'present'

  - name: 'Installing wireguard and wireguard-tools'
    ansible.builtin.package:
      name:
        - 'kmod-wireguard'
        - 'wireguard-tools'
      state: 'present'

  tags:
    - 'wireguard_client'


- block:

  - name: 'Stopping wireguard service'
    ansible.builtin.systemd:
      name: 'wg-quick@{{ wireguard_client__interface }}.service'
      state: 'stopped'

  - name: 'Registering old public key of wireguard client'
    ansible.builtin.shell: |-
      cat /etc/wireguard/public.key
    register: 'wireguard_client__old_public_key'

  - name: 'Removing wireguard client from wireguard server'
    ansible.builtin.shell: |-
      wg set {{ wireguard_client__interface }} peer {{ wireguard_client__old_public_key.stdout }} remove
    delegate_to: '{{ wireguard_client__wireguard_server }}'

  - name: 'Removing wireguard private key'
    ansible.builtin.file:
      path: '/etc/wireguard/private.key'
      state: 'absent'
    notify: 'wireguard_client: restart wireguard'

  - name: 'Removing wireguard public key'
    ansible.builtin.file:
      path: '/etc/wireguard/public.key'
      state: 'absent'
    notify: 'wireguard_client: restart wireguard'

  tags:
    - 'wireguard_client:rekey'
    - 'never'


- block:

  - name: 'Generating wireguard private key'
    ansible.builtin.shell: |-
      wg genkey | (umask 0077 && tee /etc/wireguard/private.key)
    args:
      creates: '/etc/wireguard/private.key'

  - name: 'Generating wireguard public key'
    ansible.builtin.shell: |-
      cat /etc/wireguard/private.key | wg pubkey | tee /etc/wireguard/public.key
    args:
      creates: '/etc/wireguard/public.key'

  tags:
    - 'wireguard_client'
    - 'wireguard_client:create_keys'
    - 'wireguard_client:rekey'


- block:

  - name: 'Registering public key of wireguard server'
    ansible.builtin.shell: |-
      cat /etc/wireguard/public.key
    delegate_to: '{{ wireguard_client__wireguard_server }}'
    register: 'wireguard_client__wireguard_server_public_key'

  - name: 'Registering private key of wireguard client'
    ansible.builtin.shell: |-
      cat /etc/wireguard/private.key
    register: 'wireguard_client__private_key'

  - name: 'Registering public key of wireguard client'
    ansible.builtin.shell: |-
      cat /etc/wireguard/public.key
    register: 'wireguard_client__public_key'

  - name: 'Deploying /etc/wireguard/{{ wireguard_client__interface }}.conf'
    ansible.builtin.template:
      src: 'etc/wireguard/wg0.conf.j2'
      dest: '/etc/wireguard/{{ wireguard_client__interface }}.conf'
      owner: 'root'
      group: 'root'
      mode: 0o644
    notify: 'wireguard_client: restart wireguard'

  - name: 'Adding wireguard client to wireguard server'
    ansible.builtin.shell: |-
      wg set {{ wireguard_client__interface }} peer {{ wireguard_client__public_key.stdout }} allowed-ips {{ wireguard_client__ipaddress }}
    delegate_to: '{{ wireguard_client__wireguard_server }}'

  tags:
    - 'wireguard_client'
    - 'wireguard_client:configure'
    - 'wireguard_client:rekey'

- block:

  - name: 'systemctl: wg-quick@{{ wireguard_client__interface }}.service enabled = {{ wireguard_client__service_enabled }}'
    ansible.builtin.systemd:
      name: 'wg-quick@{{ wireguard_client__interface }}.service'
      enabled: '{{ wireguard_client__service_enabled }}'

  - name: 'systemctl: wg-quick@{{ wireguard_client__interface }}.service state = {{ wireguard_client__service_state }}'
    ansible.builtin.systemd:
      name: 'wg-quick@{{ wireguard_client__interface }}.service'
      state: '{{ wireguard_client__service_state }}'

  tags:
    - 'wireguard_client'
    - 'wireguard_client:state'
