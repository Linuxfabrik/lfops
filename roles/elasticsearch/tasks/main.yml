- name: 'Set platform/version specific variables'
  ansible.builtin.import_role:
    name: 'shared'
    tasks_from: 'platform-variables.yml'
  tags:
    - 'elasticsearch'
    - 'elasticsearch:certs'
    - 'elasticsearch:configure'
    - 'elasticsearch:state'

- block:

  - name: 'Install elasticsearch unzip'
    ansible.builtin.package:
      name:
        - 'elasticsearch'
        - 'unzip'
      state: 'present'

  - name: 'mkdir -p {{ elasticsearch__path_data }}'
    ansible.builtin.file:
      path: '{{ elasticsearch__path_data }}'
      state: 'directory'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o755

  - name: |-
      mkdir -p /var/lib/elasticsearch/tmp
      chown elasticsearch:elasticsearch /var/lib/elasticsearch/tmp
      chmod 755 /var/lib/elasticsearch/tmp
    ansible.builtin.file:
      path: '/var/lib/elasticsearch/tmp'
      state: 'directory'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o755

  tags:
    - 'elasticsearch'


- block:

  - name: 'mkdir -p /etc/elasticsearch/certs'
    ansible.builtin.file:
      path: '/etc/elasticsearch/certs'
      state: 'directory'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o750

  - name: 'Deploy /etc/elasticsearch/certs/ca.crt'
    ansible.builtin.copy:
      dest: '/etc/elasticsearch/certs/ca.crt'
      content: '{{ elasticsearch__ca_cert }}'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o640

  - name: 'Deploy /etc/elasticsearch/certs/transport.crt'
    ansible.builtin.copy:
      dest: '/etc/elasticsearch/certs/transport.crt'
      content: '{{ elasticsearch__transport_cert }}'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o600

  - name: 'Deploy /etc/elasticsearch/certs/transport.key'
    ansible.builtin.copy:
      dest: '/etc/elasticsearch/certs/transport.key'
      content: '{{ elasticsearch__transport_key }}'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o400

  - name: 'Deploy /etc/elasticsearch/certs/http.crt'
    ansible.builtin.copy:
      dest: '/etc/elasticsearch/certs/http.crt'
      content: '{{ elasticsearch__http_cert }}'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o600

  - name: 'Deploy /etc/elasticsearch/certs/http.key'
    ansible.builtin.copy:
      dest: '/etc/elasticsearch/certs/http.key'
      content: '{{ elasticsearch__http_key }}'
      owner: 'elasticsearch'
      group: 'elasticsearch'
      mode: 0o400

  # block
  when:
    - 'elasticsearch__ca_cert is defined and elasticsearch__ca_cert | length'
  notify: 'elasticsearch: restart elasticsearch'
  tags:
    - 'elasticsearch'
    - 'elasticsearch:certs'


- block:

  - name: 'deploy /etc/elasticsearch/elasticsearch.yml'
    ansible.builtin.template:
      src: 'etc/elasticsearch/elasticsearch.yml.j2'
      dest: '/etc/elasticsearch/elasticsearch.yml'
      owner: 'root'
      group: 'elasticsearch'
      mode: 0o660
    notify: 'elasticsearch: restart elasticsearch'

  - name: 'Remove rpmnew / rpmsave (and Debian equivalents)'
    ansible.builtin.include_role:
      name: 'shared'
      tasks_from: 'remove-rpmnew-rpmsave.yml'
    vars:
      shared__remove_rpmnew_rpmsave_config_file: '/etc/elasticsearch/elasticsearch.yml'

  - name: 'deploy {{ __elasticsearch__sysconfig_file_path }}'
    ansible.builtin.template:
      src: 'etc/sysconfig/elasticsearch.j2'
      dest: '{{ __elasticsearch__sysconfig_file_path }}'
      owner: 'root'
      group: 'elasticsearch'
      mode: 0o664
    notify: 'elasticsearch: restart elasticsearch'

  - name: 'deploy /tmp/certutil.yml'
    ansible.builtin.template:
      src: 'tmp/certutil.yml.j2'
      dest: '/tmp/certutil.yml'
      owner: 'root'
      group: 'root'
      mode: 0o644

  tags:
    - 'elasticsearch'
    - 'elasticsearch:configure'


- block:

  - name: 'systemctl {{ elasticsearch__service_enabled | bool | ternary("enable", "disable") }} --now elasticsearch.service'
    ansible.builtin.systemd:
      name: 'elasticsearch.service'
      enabled: '{{ elasticsearch__service_enabled }}'
      state: '{{ elasticsearch__service_state }}'

  tags:
    - 'elasticsearch'
    - 'elasticsearch:state'
