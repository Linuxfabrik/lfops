- name: 'Set platform/version specific variables'
  ansible.builtin.import_role:
    name: 'shared'
    tasks_from: 'platform-variables.yml'
  tags:
    - 'mount'


- block:

  - name: 'Is fstype nfs present?'
    ansible.builtin.set_fact:
      mount__nfs_present: '{{ mount__mounts | selectattr("state", "ne", "absent") | selectattr("fstype", "equalto", "nfs") | list | length | bool }}'

  - name: 'Install {{ mount__nfs_client_package }}'
    ansible.builtin.package:
      name: '{{ mount__nfs_client_package }}'
      state: 'present'
    when:
      - 'mount__nfs_present is defined'
      - 'mount__nfs_present'

  - name: 'Is fstype cifs present?'
    ansible.builtin.set_fact:
      mount__cifs_present: '{{ mount__mounts | selectattr("state", "ne", "absent") | selectattr("fstype", "equalto", "cifs") | list | length | bool }}'

  - name: 'Install {{ mount__cifs_client_package }}'
    ansible.builtin.package:
      name: '{{ mount__cifs_client_package }}'
      state: 'present'
    when:
      - 'mount__cifs_present is defined'
      - 'mount__cifs_present'

  - name: 'mkdir -p mount-point'
    ansible.builtin.file:
      path: '{{ item["path"] }}'
      state: 'directory'
      owner: 'root'
      group: 'root'
      mode: 0o755
    loop: '{{ mount__mounts }}'

  - name: 'Mount volumes'
    ansible.posix.mount:
      path: '{{ item["path"] }}'
      src: '{{ item["src"] }}'
      opts: '{{ item["opts"] }}'
      state: '{{ item["state"] }}'
      fstype: '{{ item["fstype"] }}'
    loop: '{{ mount__mounts }}'

  when:
    - 'mount__mounts is defined'
    - 'mount__mounts | length'

  tags:
    - 'mount'
