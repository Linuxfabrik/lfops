# {{ ansible_managed }}
# 2023032402

# To troubleshoot and get more log info enable ldap debug logging in grafana.ini
# [log]
# filters = ldap:debug

[[servers]]
# Ldap server host (specify multiple hosts space separated)
host = "{{ grafana__ldap_config.host | default('127.0.0.1') }}"
# Default port is 389 or 636 if use_ssl = true
port = {{ grafana__ldap_config.port | default(389) }}
# Set to true if LDAP server should use an encrypted TLS connection (either with STARTTLS or LDAPS)
use_ssl = {{ grafana__ldap_config.use_ssl | default('false') }}
# If set to true, use LDAP with STARTTLS instead of LDAPS
start_tls = false
# set to true if you want to skip ssl cert validation
ssl_skip_verify = false
# set to the path to your root CA certificate or leave unset to use system defaults
# root_ca_cert = "/path/to/certificate.crt"
# Authentication against LDAP servers requiring client certificates
# client_cert = "/path/to/client.crt"
# client_key = "/path/to/client.key"

# Search user bind dn
bind_dn = "{{ grafana__ldap_config.bind_dn }}"
# Search user bind password
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
bind_password = """{{ grafana__ldap_config.bind_password }}"""

# User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
search_filter = "{{ grafana__ldap_config.search_filter }}"

# An array of base dns to search through
search_base_dns = {{ grafana__ldap_config.search_base_dns }}

## For Posix or LDAP setups that does not support member_of attribute you can define the below settings
## Please check grafana LDAP docs for examples
{% if grafana__ldap_config.group_search_filter is defined and grafana__ldap_config.group_search_filter | length %}
group_search_filter = "{{ grafana__ldap_config.group_search_filter }}"
{% endif %}
{% if grafana__ldap_config.group_search_base_dns is defined and grafana__ldap_config.group_search_base_dns | length %}
group_search_base_dns = "{{ grafana__ldap_config.group_search_base_dns }}"
{% endif %}
{% if grafana__ldap_config.group_search_filter_user_attribute is defined and grafana__ldap_config.group_search_filter_user_attribute | length %}
group_search_filter_user_attribute = "{{ grafana__ldap_config.group_search_filter_user_attribute }}"
{% endif %}

# Specify names of the ldap attributes your ldap uses
[servers.attributes]
name = "givenName"
surname = "sn"
username = "{{ grafana__ldap_config.username | default('cn') }}"
member_of = "memberOf"
email =  "{{ grafana__ldap_config.email | default('email') }}"

# Map ldap groups to grafana org roles
{% if grafana__ldap_config.admin_group_dn is defined and grafana__ldap_config.admin_group_dn | length %}
[[servers.group_mappings]]
group_dn = "{{ grafana__ldap_config.admin_group_dn }}"
org_role = "Admin"
# To make user an instance admin  (Grafana Admin) uncomment line below
grafana_admin = true
{% endif %}
# The Grafana organization database id, optional, if left out the default org (id 1) will be used
# org_id = 1

{% if grafana__ldap_config.editor_group_dn is defined and grafana__ldap_config.editor_group_dn | length %}
[[servers.group_mappings]]
group_dn = "{{ grafana__ldap_config.editor_group_dn }}"
org_role = "Editor"
{% endif %}

{% if grafana__ldap_config.viewer_group_dn is defined and grafana__ldap_config.viewer_group_dn | length %}
[[servers.group_mappings]]
# If you want to match all (or no ldap groups) then you can use wildcard
group_dn = "{{ grafana__ldap_config.viewer_group_dn }}"
org_role = "Viewer"
{% endif %}
